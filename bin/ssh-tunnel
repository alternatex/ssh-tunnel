#!/usr/bin/env node

"use strict";

/**
 * Module dependencies
 */
var colors = require("colors");
var program = require('commander');
var version = JSON.parse(require('fs').readFileSync(__dirname+'/../package.json', 'utf8')).version;

console.log('SSH-Tunnel'.white.bold); 
console.log(('Version: '+version).white); 

// TODO: fix input file!!! -> ensure written to on output aswell... thanks!

// TODO: gather program.command info from lib/prompt/* -> require-dir
// TODO: gather program.command info from lib/prompt/* -> require-dir
// TODO: gather program.command info from lib/prompt/* -> require-dir
// TODO: gather program.command info from lib/prompt/* -> require-dir
// TODO: gather program.command info from lib/prompt/* -> require-dir

program
  .version(version)
  .option('-f, --file <file>', 'Load configuration from <file> (default: \'tunnel.json\')')
  .command('connect <name>', 'Establish connection')
  .command('copy <name> <copy>', 'Copy existing connection')
  .command('delete <name>', 'Delete connection')
  .command('update <name>', 'Update connection')
  .command('export <file>', 'Export connections to file')
  .command('import <file>', 'Import connections from file')  
  .command('install', 'Install your public key in a remote machine\'s authorized_keys')
  .parse(process.argv);

if(program.args.length===0){
  console.log();
  console.log("Starting interactive mode".green);  
  console.log();
  
  var app = getApp(program);

  app.tunnel.on('connect', function(){
    console.log();
    console.log("Establishing connection".green);
    console.log("Press "+"^C".yellow + " to disconnect");
    console.log();
  });

  app.tunnel.on('install', function(){
    console.log();
    console.log("Importing local certificate into remote".green);
    console.log();
  });

  app.require('connections')();
}

function getApp(program){
  var app = require("../lib/app");
  var filename = program.file ? program.file : 'tunnel.json';
  app.init({ filename: filename });
  return app;
}